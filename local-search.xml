<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>uni-app+vant开发小程序踩坑总结</title>
    <link href="/2023/03/07/uni-app-vant%E5%BC%80%E5%8F%91%E5%B0%8F%E7%A8%8B%E5%BA%8F%E8%B8%A9%E5%9D%91%E6%80%BB%E7%BB%93/"/>
    <url>/2023/03/07/uni-app-vant%E5%BC%80%E5%8F%91%E5%B0%8F%E7%A8%8B%E5%BA%8F%E8%B8%A9%E5%9D%91%E6%80%BB%E7%BB%93/</url>
    
    <content type="html"><![CDATA[<h1 id="uni-app-vant-开发小程序踩坑总结"><a href="#uni-app-vant-开发小程序踩坑总结" class="headerlink" title="uni-app + vant 开发小程序踩坑总结"></a>uni-app + vant 开发小程序踩坑总结</h1><h2 id="开发微信小程序技术选型"><a href="#开发微信小程序技术选型" class="headerlink" title="开发微信小程序技术选型"></a>开发微信小程序技术选型</h2><h3 id="原生开发"><a href="#原生开发" class="headerlink" title="原生开发"></a>原生开发</h3><p><strong>优势</strong></p><ul><li>小程序原生语言适配微信,专注开发即可</li><li>只用阅读微信开发文档即可</li><li>性能会得到系统开发优化</li></ul><p><strong>劣势</strong></p><ul><li>原生语言比较小众,离开了微信生态没有太多生存空间</li><li>组件库及其他插件生态不太好</li><li>无法支持一套代码多端运行</li></ul><h3 id="uni-app"><a href="#uni-app" class="headerlink" title="uni-app"></a>uni-app</h3><p><strong>优势</strong></p><ul><li>语法基本与 vue 一致,前端人员上手成本较低</li><li>一套代码多端运行</li><li>DCloud的生态插件相对完善</li><li>可选择的组件库及插件较多</li><li>支持 vscode 编辑器开发,npm 构建</li><li>开发效率更高</li></ul><p><strong>劣势</strong></p><ul><li>小程序文档及 uni-app 文档都需要查看,还有一些兼容性问题</li></ul><p>综合考虑,推荐使用 uni-app 开发小程序<br><br /></p><h2 id="项目框架搭建"><a href="#项目框架搭建" class="headerlink" title="项目框架搭建"></a>项目框架搭建</h2><ul><li>官方推荐使用 HBuildX 去搭建项目 (因无法使用vscode,难以接收)</li><li>个人推荐使用 VSCode 编辑器开发,通过 npm 命令引入脚手架</li></ul><h3 id="安装-vue-cli-已安装跳过"><a href="#安装-vue-cli-已安装跳过" class="headerlink" title="安装 vue-cli (已安装跳过)"></a>安装 vue-cli (已安装跳过)</h3><p><code>npm install -g @vue/cli</code></p><h3 id="创建-uni-app-项目"><a href="#创建-uni-app-项目" class="headerlink" title="创建 uni-app 项目"></a>创建 uni-app 项目</h3><p><code>vue create -p dcloudio/uni-preset-vue my-project</code></p><ul><li>选择 hello uni-app 模板即可</li><li>下载依赖包 (强烈建议使用 <strong>yarn</strong>,之前使用 npm 下载依赖一直有问题,排查很久也没找到问题,后面换了 yarn 就好了)</li><li>跑一下项目, <code>npm run dev:mp-weixin</code> 会在当前目录下有一个 dist 文件,里面有一个 <strong>mp-weixin</strong> 的文件夹</li><li>使用微信开发者工具将它导入就可以看到编译好的页面</li></ul><h3 id="微信小程序开发前置工作"><a href="#微信小程序开发前置工作" class="headerlink" title="微信小程序开发前置工作"></a>微信小程序开发前置工作</h3><ul><li>小程序账号申请 (分为个人,企业,政府等类型,不同的类型会有功能限制)</li><li>小程序认证 (微信中一些 api 必须要认证后的小程序才能使用,比如获取用户手机号,业务场景涉及的话需提前申请认证 费用 300)</li><li>接口设置 (小程序对于部分 api 需要审核后才能使用,比如获取当前地理位置,需要提供完整的业务场景,通过之后才能使用)</li><li>微信支付 (需要开通商户服务才行,如果涉及到平台还会有二级商户,服务商等概念)</li><li>……</li></ul><h3 id="项目开发系统配置"><a href="#项目开发系统配置" class="headerlink" title="项目开发系统配置"></a>项目开发系统配置</h3><h4 id="配置-appid"><a href="#配置-appid" class="headerlink" title="配置 appid"></a>配置 appid</h4><p>找到 <code>manifest.json</code> 文件,在 <code>mp-weixin</code> 属性下面配置你小程序的 appid</p><img src="/2023/03/07/uni-app-vant%E5%BC%80%E5%8F%91%E5%B0%8F%E7%A8%8B%E5%BA%8F%E8%B8%A9%E5%9D%91%E6%80%BB%E7%BB%93/1.png" class=""><p><strong>好处</strong><br>这样每次使用微信开发者工具打开项目都能识别你的小程序,方便后续的开发及版本上传</p><h4 id="配置-alias"><a href="#配置-alias" class="headerlink" title="配置 alias"></a>配置 alias</h4><p>根目录下新建 <code>vue.config.js</code> 文件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> defaultSettings = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;./src/config&#x27;</span>) <span class="hljs-comment">// 公共配置文件</span><br><span class="hljs-keyword">const</span> path = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;path&#x27;</span>)<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">resolve</span>(<span class="hljs-params">dir</span>) &#123;<br>  <span class="hljs-keyword">return</span> path.<span class="hljs-title function_">join</span>(__dirname, dir)<br>&#125;<br><span class="hljs-keyword">const</span> name = defaultSettings.<span class="hljs-property">name</span><br><span class="hljs-variable language_">module</span>.<span class="hljs-property">exports</span> = &#123;<br>  <span class="hljs-attr">lintOnSave</span>: process.<span class="hljs-property">env</span>.<span class="hljs-property">NODE_ENV</span> === <span class="hljs-string">&#x27;development&#x27;</span>,<br>  <span class="hljs-attr">configureWebpack</span>: &#123;<br>    <span class="hljs-attr">name</span>: name,<br>    <span class="hljs-attr">resolve</span>: &#123;<br>      <span class="hljs-attr">alias</span>: &#123;<br>        <span class="hljs-string">&#x27;@&#x27;</span>: <span class="hljs-title function_">resolve</span>(<span class="hljs-string">&#x27;src&#x27;</span>)<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>好处</strong><br>方便文件引入,提高文件查找效率</p><h4 id="配置公共请求"><a href="#配置公共请求" class="headerlink" title="配置公共请求"></a>配置公共请求</h4><ul><li><p>小程序里无法使用 axios 这个库,所以只能自己根据 uni.request 进行封装,或者在 dcloud 里面找支持的第三方库</p></li><li><p>下面为个人在项目中的使用,仅供参考</p></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> &#123; loginToast &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@/utils&#x27;</span><br><br><span class="hljs-keyword">const</span> baseUrl = process.<span class="hljs-property">env</span>.<span class="hljs-property">VUE_APP_BASE_API</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">request</span>(<span class="hljs-params">options = &#123;&#125;</span>) &#123;<br>  options.<span class="hljs-property">header</span> = &#123;<br>    <span class="hljs-string">&#x27;openid&#x27;</span>: uni.<span class="hljs-title function_">getStorageSync</span>(<span class="hljs-string">&#x27;openid&#x27;</span>) || <span class="hljs-string">&#x27;&#x27;</span><br>  &#125;<br>  <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> &#123;<br>    uni<br>      .<span class="hljs-title function_">request</span>(&#123;<br>        <span class="hljs-attr">url</span>: baseUrl + options.<span class="hljs-property">url</span> || <span class="hljs-string">&#x27;&#x27;</span>,<br>        <span class="hljs-attr">method</span>: options.<span class="hljs-property">method</span> || <span class="hljs-string">&#x27;GET&#x27;</span>,<br>        <span class="hljs-attr">data</span>: options.<span class="hljs-property">data</span> || &#123;&#125;,<br>        <span class="hljs-attr">header</span>: options.<span class="hljs-property">header</span> || &#123;&#125;<br>      &#125;)<br>      .<span class="hljs-title function_">then</span>(<span class="hljs-function">(<span class="hljs-params">data</span>) =&gt;</span> &#123;<br>        <span class="hljs-keyword">const</span> [err, res] = data<br>        <span class="hljs-keyword">if</span> (res.<span class="hljs-property">statusCode</span> === <span class="hljs-number">200</span>) &#123;<br>          <span class="hljs-title function_">resolve</span>(res.<span class="hljs-property">data</span>)<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>          <span class="hljs-title function_">reject</span>(res.<span class="hljs-property">data</span>)<br>          <span class="hljs-keyword">switch</span> (res.<span class="hljs-property">statusCode</span>) &#123;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">401</span>:<br>              <span class="hljs-title function_">loginToast</span>()<br>              <span class="hljs-keyword">break</span><br>            <span class="hljs-keyword">case</span> <span class="hljs-number">403</span>:<br>              <span class="hljs-title function_">loginToast</span>()<br>              <span class="hljs-keyword">break</span><br>              <span class="hljs-comment">// 404请求不存在</span><br>            <span class="hljs-keyword">case</span> <span class="hljs-number">404</span>:<br>              uni.<span class="hljs-title function_">showToast</span>(&#123;<br>                <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;网络请求不存在&#x27;</span>,<br>                <span class="hljs-attr">icon</span>: <span class="hljs-string">&#x27;error&#x27;</span>,<br>                <span class="hljs-attr">duration</span>: <span class="hljs-number">1500</span><br>              &#125;)<br>              <span class="hljs-keyword">break</span><br>              <span class="hljs-comment">// 其他错误，直接抛出错误提示</span><br>            <span class="hljs-keyword">case</span> <span class="hljs-number">500</span>:<br>              uni.<span class="hljs-title function_">showToast</span>(&#123;<br>                <span class="hljs-attr">title</span>: res.<span class="hljs-property">data</span>.<span class="hljs-property">msg</span>,<br>                <span class="hljs-attr">icon</span>: <span class="hljs-string">&#x27;none&#x27;</span>,<br>                <span class="hljs-attr">duration</span>: <span class="hljs-number">2000</span><br>              &#125;)<br>              <span class="hljs-keyword">break</span><br>            <span class="hljs-attr">default</span>:<br>              <span class="hljs-keyword">return</span><br>          &#125;<br>        &#125;<br>      &#125;)<br>      .<span class="hljs-title function_">catch</span>(<span class="hljs-function">(<span class="hljs-params">error</span>) =&gt;</span> &#123;<br>        <span class="hljs-title function_">reject</span>(error)<br>      &#125;)<br>  &#125;)<br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="引入第三方组件库"><a href="#引入第三方组件库" class="headerlink" title="引入第三方组件库"></a>引入第三方组件库</h4><p>第三方组件库根据个人喜好选择</p><p>推荐使用 <a href="https://youzan.github.io/vant-weapp/#/home">vant-weapp</a> 组件库</p><p>安装方案:</p><ul><li>使用 npm 引入</li><li>下载组件库直接在项目中使用 (推荐第二种,有一些特性化的场景,可能需要对组件库进行二次开发)</li></ul><p>使用:</p><ul><li><code>pages.json</code> 文件下找到 <code>globalStyle</code> 对象</li><li>新增属性 <code>usingComponents</code>,然后引入需要的组件</li><li>下面是常用的组件,基本都会用到</li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-attr">&quot;usingComponents&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br><span class="hljs-attr">&quot;van-button&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/wxcomponents/vant/button/index&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;van-card&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/wxcomponents/vant/card/index&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;van-cell&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/wxcomponents/vant/cell/index&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;van-cell-group&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/wxcomponents/vant/cell-group/index&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;van-checkbox&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/wxcomponents/vant/checkbox/index&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;van-checkbox-group&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/wxcomponents/vant/checkbox-group/index&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;van-col&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/wxcomponents/vant/col/index&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;van-dialog&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/wxcomponents/vant/dialog/index&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;van-field&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/wxcomponents/vant/field/index&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;van-goods-action&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/wxcomponents/vant/goods-action/index&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;van-goods-action-icon&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/wxcomponents/vant/goods-action-icon/index&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;van-goods-action-button&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/wxcomponents/vant/goods-action-button/index&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;van-icon&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/wxcomponents/vant/icon/index&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;van-loading&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/wxcomponents/vant/loading/index&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;van-nav-bar&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/wxcomponents/vant/nav-bar/index&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;van-notice-bar&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/wxcomponents/vant/notice-bar/index&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;van-notify&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/wxcomponents/vant/notify/index&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;van-panel&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/wxcomponents/vant/panel/index&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;van-popup&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/wxcomponents/vant/popup/index&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;van-progress&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/wxcomponents/vant/progress/index&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;van-radio&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/wxcomponents/vant/radio/index&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;van-radio-group&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/wxcomponents/vant/radio-group/index&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;van-row&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/wxcomponents/vant/row/index&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;van-search&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/wxcomponents/vant/search/index&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;van-slider&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/wxcomponents/vant/slider/index&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;van-stepper&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/wxcomponents/vant/stepper/index&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;van-steps&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/wxcomponents/vant/steps/index&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;van-submit-bar&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/wxcomponents/vant/submit-bar/index&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;van-swipe-cell&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/wxcomponents/vant/swipe-cell/index&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;van-switch&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/wxcomponents/vant/switch/index&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;van-tab&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/wxcomponents/vant/tab/index&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;van-tabs&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/wxcomponents/vant/tabs/index&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;van-tabbar&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/wxcomponents/vant/tabbar/index&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;van-tabbar-item&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/wxcomponents/vant/tabbar-item/index&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;van-tag&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/wxcomponents/vant/tag/index&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;van-toast&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/wxcomponents/vant/toast/index&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;van-transition&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/wxcomponents/vant/transition/index&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;van-tree-select&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/wxcomponents/vant/tree-select/index&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;van-datetime-picker&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/wxcomponents/vant/datetime-picker/index&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;van-rate&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/wxcomponents/vant/rate/index&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;van-collapse&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/wxcomponents/vant/collapse/index&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;van-collapse-item&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/wxcomponents/vant/collapse-item/index&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;van-picker&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/wxcomponents/vant/picker/index&quot;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h4 id="引入-iconfont-图标"><a href="#引入-iconfont-图标" class="headerlink" title="引入 iconfont 图标"></a>引入 iconfont 图标</h4><p><a href="https://blog.51cto.com/yataigp/3242664">uni-app中引入iconfont字体图标使用教程</a></p><h4 id="使用-sass-样式预处理器"><a href="#使用-sass-样式预处理器" class="headerlink" title="使用 sass 样式预处理器"></a>使用 sass 样式预处理器</h4><p>安装 sass 和 sass-loader 即可</p><h4 id="开发生产环境变量配置"><a href="#开发生产环境变量配置" class="headerlink" title="开发生产环境变量配置"></a>开发生产环境变量配置</h4><p>…</p><h4 id="使用-vuex-状态管理"><a href="#使用-vuex-状态管理" class="headerlink" title="使用 vuex 状态管理"></a>使用 vuex 状态管理</h4><p>…</p><h4 id="配置-eslint"><a href="#配置-eslint" class="headerlink" title="配置 eslint"></a>配置 eslint</h4><p>…</p><h2 id="业务场景"><a href="#业务场景" class="headerlink" title="业务场景"></a>业务场景</h2><h3 id="微信登录及获取手机号"><a href="#微信登录及获取手机号" class="headerlink" title="微信登录及获取手机号"></a>微信登录及获取手机号</h3><blockquote><p>小程序中使用微信获取用户手机号一键登录是最常见的场景<br><strong>直接上代码</strong></p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><code class="hljs js">&lt;template&gt;<br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">button</span></span></span><br><span class="hljs-tag"><span class="language-xml">      <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">      <span class="hljs-attr">open-type</span>=<span class="hljs-string">&quot;getPhoneNumber&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">      @<span class="hljs-attr">getphonenumber</span>=<span class="hljs-string">&quot;onGetPhoneNumber&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">    &gt;</span></span><br><span class="language-xml">      微信用户一键登录</span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">van-toast</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;van-toast&quot;</span> /&gt;</span></span><br><span class="language-xml">  <span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span></span><br>&lt;/template&gt;<br><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">import</span> &#123; login &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@/api/user&#x27;</span></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">import</span> <span class="hljs-title class_">Toast</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@/wxcomponents/vant/toast/toast&#x27;</span></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="language-javascript"><span class="language-xml">  <span class="hljs-title function_">data</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-keyword">return</span> &#123;&#125;</span></span><br><span class="language-javascript"><span class="language-xml">  &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">  <span class="hljs-attr">methods</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-comment">// 获取用户手机号的前提是小程序已经认证通过了</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-title function_">onGetPhoneNumber</span>(<span class="hljs-params">e</span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">      <span class="hljs-keyword">if</span> (e.<span class="hljs-property">detail</span>.<span class="hljs-property">errMsg</span> === <span class="hljs-string">&#x27;getPhoneNumber:fail user deny&#x27;</span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-comment">// 用户拒绝授权</span></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-title class_">Toast</span>.<span class="hljs-title function_">fail</span>(<span class="hljs-string">&#x27;请授权手机号!&#x27;</span>)</span></span><br><span class="language-javascript"><span class="language-xml">      &#125; <span class="hljs-keyword">else</span> &#123;</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-comment">// 允许授权</span></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">const</span> phoneCode = e.<span class="hljs-property">detail</span>.<span class="hljs-property">code</span></span></span><br><span class="language-javascript"><span class="language-xml">        uni.<span class="hljs-title function_">login</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml">          <span class="hljs-attr">provider</span>: <span class="hljs-string">&#x27;weixin&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">          <span class="hljs-attr">success</span>: <span class="hljs-function">(<span class="hljs-params">result</span>) =&gt;</span> &#123;</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-keyword">if</span> (result &amp;&amp; result.<span class="hljs-property">code</span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">              <span class="hljs-title function_">login</span>(&#123; <span class="hljs-attr">code</span>: result.<span class="hljs-property">code</span>, <span class="hljs-attr">phoneCode</span>: phoneCode &#125;).<span class="hljs-title function_">then</span>(<span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                uni.<span class="hljs-title function_">setStorageSync</span>(<span class="hljs-string">&#x27;openid&#x27;</span>, res.<span class="hljs-property">data</span>.<span class="hljs-property">openid</span>)</span></span><br><span class="language-javascript"><span class="language-xml">                uni.<span class="hljs-title function_">setStorageSync</span>(<span class="hljs-string">&#x27;userInfo&#x27;</span>, &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                  <span class="hljs-attr">nickname</span>: res.<span class="hljs-property">data</span>.<span class="hljs-property">nickname</span>,</span></span><br><span class="language-javascript"><span class="language-xml">                  <span class="hljs-attr">avatar</span>: res.<span class="hljs-property">data</span>.<span class="hljs-property">avatar</span></span></span><br><span class="language-javascript"><span class="language-xml">                &#125;)</span></span><br><span class="language-javascript"><span class="language-xml">                <span class="hljs-title class_">Toast</span>(&#123;</span></span><br><span class="language-javascript"><span class="language-xml">                  <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;success&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">                  <span class="hljs-attr">message</span>: <span class="hljs-string">&#x27;登录成功&#x27;</span>,</span></span><br><span class="language-javascript"><span class="language-xml">                  <span class="hljs-attr">duration</span>: <span class="hljs-number">800</span>,</span></span><br><span class="language-javascript"><span class="language-xml">                  <span class="hljs-attr">onClose</span>: <span class="hljs-function">() =&gt;</span> &#123;</span></span><br><span class="language-javascript"><span class="language-xml">                    uni.<span class="hljs-title function_">navigateBack</span>()</span></span><br><span class="language-javascript"><span class="language-xml">                  &#125;</span></span><br><span class="language-javascript"><span class="language-xml">                &#125;)</span></span><br><span class="language-javascript"><span class="language-xml">              &#125;)</span></span><br><span class="language-javascript"><span class="language-xml">            &#125;</span></span><br><span class="language-javascript"><span class="language-xml">          &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">          <span class="hljs-attr">fail</span>: <span class="hljs-function">(<span class="hljs-params">result</span>) =&gt;</span> &#123;</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-title class_">Toast</span>.<span class="hljs-title function_">fail</span>(<span class="hljs-string">&#x27;出错了,请重试!&#x27;</span>)</span></span><br><span class="language-javascript"><span class="language-xml">          &#125;</span></span><br><span class="language-javascript"><span class="language-xml">        &#125;)</span></span><br><span class="language-javascript"><span class="language-xml">      &#125;</span></span><br><span class="language-javascript"><span class="language-xml">    &#125;</span></span><br><span class="language-javascript"><span class="language-xml">  &#125;</span></span><br><span class="language-javascript"><span class="language-xml">&#125;</span></span><br><span class="language-javascript"><span class="language-xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure><h3 id="在小程序中使用-websocket"><a href="#在小程序中使用-websocket" class="headerlink" title="在小程序中使用 websocket"></a>在小程序中使用 websocket</h3><p><strong>小程序中无法使用 new webSocket() 的方式去创建</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;<br>  <span class="hljs-title function_">data</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">return</span> &#123;<br>      <span class="hljs-attr">timer1</span>: <span class="hljs-literal">null</span>,<br>      <span class="hljs-attr">timer2</span>: <span class="hljs-literal">null</span>, <span class="hljs-comment">// 心跳</span><br>      <span class="hljs-attr">flag</span>: <span class="hljs-literal">false</span>,<br>      <span class="hljs-attr">wsurl</span>: <span class="hljs-string">&#x27;&#x27;</span>,<br>    &#125;<br>  &#125;,<br>  <span class="hljs-title function_">onLoad</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">initWebSocket</span>()<br>  &#125;,<br>  <span class="hljs-title function_">destroyed</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">clearTimer</span>()<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">flag</span> = <span class="hljs-literal">false</span><br>    uni.<span class="hljs-title function_">closeSocket</span>() <span class="hljs-comment">// 离开路由之后断开websocket连接</span><br>  &#125;,<br>  <span class="hljs-attr">methods</span>: &#123;<br>    <span class="hljs-comment">// 初始化weosocket</span><br>    <span class="hljs-title function_">initWebSocket</span>(<span class="hljs-params"></span>) &#123;<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">wsurl</span> = <span class="hljs-string">&#x27;xxxx&#x27;</span><br>      uni.<span class="hljs-title function_">connectSocket</span>(&#123;<br>        <span class="hljs-attr">url</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">wsurl</span>,<br>        <span class="hljs-attr">success</span>: <span class="hljs-function">() =&gt;</span> &#123;<br>          <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">clearTimer</span>()<br>          uni.<span class="hljs-title function_">onSocketOpen</span>(<span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;打开连接&#x27;</span>)<br>          &#125;)<br>          <span class="hljs-comment">// 方式断开,持续给服务端发送信息</span><br>          <span class="hljs-variable language_">this</span>.<span class="hljs-property">timer2</span> = <span class="hljs-built_in">setInterval</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">websocketsend</span>(<span class="hljs-string">&#x27;&#x27;</span>)<br>          &#125;, <span class="hljs-number">60</span> * <span class="hljs-number">1000</span>)<br>        &#125;,<br>        <span class="hljs-attr">fail</span>: <span class="hljs-function">() =&gt;</span> &#123;<br>          <span class="hljs-comment">// 失败重连机制</span><br>          <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">clearTimer</span>()<br>          <span class="hljs-variable language_">this</span>.<span class="hljs-property">timer1</span> = <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">initWebSocket</span>()<br>          &#125;, <span class="hljs-number">5000</span>)<br>        &#125;<br>      &#125;)<br>      uni.<span class="hljs-title function_">onSocketMessage</span>(<span class="hljs-function">(<span class="hljs-params">e</span>) =&gt;</span> &#123;<br>        <span class="hljs-comment">// 监听服务端推送过来的数据</span><br>        <span class="hljs-keyword">const</span> resdata = <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">parse</span>(e.<span class="hljs-property">data</span>)<br>      &#125;)<br>      <span class="hljs-comment">// 断开重连机制</span><br>      uni.<span class="hljs-title function_">onSocketClose</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">flag</span>) &#123;<br>          <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">clearTimer</span>()<br>          <span class="hljs-variable language_">this</span>.<span class="hljs-property">timer1</span> = <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">initWebSocket</span>()<br>          &#125;, <span class="hljs-number">5000</span>)<br>        &#125;<br>      &#125;)<br>    &#125;,<br>    <span class="hljs-comment">// 数据发送</span><br>    <span class="hljs-title function_">websocketsend</span>(<span class="hljs-params">Data</span>) &#123;<br>      uni.<span class="hljs-title function_">sendSocketMessage</span>(&#123;<br>        <span class="hljs-attr">data</span>: <span class="hljs-title class_">Data</span><br>      &#125;)<br>    &#125;,<br>    <span class="hljs-comment">// 清空定时器</span><br>    <span class="hljs-title function_">clearTimer</span>(<span class="hljs-params"></span>) &#123;<br>      <span class="hljs-built_in">clearInterval</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">timer1</span>)<br>      <span class="hljs-built_in">clearInterval</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">timer2</span>)<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">timer1</span> = <span class="hljs-literal">null</span><br>      <span class="hljs-variable language_">this</span>.<span class="hljs-property">timer2</span> = <span class="hljs-literal">null</span><br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="获取地理位置及拉起地图导航"><a href="#获取地理位置及拉起地图导航" class="headerlink" title="获取地理位置及拉起地图导航"></a>获取地理位置及拉起地图导航</h3><p><strong>获取地理位置</strong></p><ul><li>前提是已经在小程序申请通过了 <code>getLocation</code> api</li><li>使用,需要用户授权,授权通过并打开了定位<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs js">uni.<span class="hljs-title function_">getLocation</span>(&#123;<br>  <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;gcj02&#x27;</span>,<br>  <span class="hljs-attr">success</span>: <span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;当前位置的经度：&#x27;</span> + res.<span class="hljs-property">longitude</span>)<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;当前位置的纬度：&#x27;</span> + res.<span class="hljs-property">latitude</span>)<br>  &#125;,<br>  <span class="hljs-attr">fail</span>: <span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;err =&#x27;</span>, err)<br>  &#125;,<br>  <span class="hljs-attr">complete</span>: <span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">getList</span>()<br>  &#125;<br>&#125;)<br></code></pre></td></tr></table></figure><strong>拉起地图导航</strong></li><li>经纬度一定需要是 number 类型,否则会报错<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js">uni.<span class="hljs-title function_">openLocation</span>(&#123;<br>  <span class="hljs-attr">latitude</span>: <span class="hljs-built_in">parseFloat</span>(info.<span class="hljs-property">lat</span>), <span class="hljs-comment">// 目的地的纬度</span><br>  <span class="hljs-attr">longitude</span>: <span class="hljs-built_in">parseFloat</span>(info.<span class="hljs-property">lng</span>), <span class="hljs-comment">// 目的地的经度</span><br>  <span class="hljs-attr">name</span>: info.<span class="hljs-property">stationName</span> <span class="hljs-comment">// 打开后显示的地址名称</span><br>&#125;)<br></code></pre></td></tr></table></figure></li></ul><h3 id="普通二维码跳转页面"><a href="#普通二维码跳转页面" class="headerlink" title="普通二维码跳转页面"></a>普通二维码跳转页面</h3><ul><li>需要先下载校验文件,放在域名服务器的根目录下</li><li>配置二维码规则</li><li>上线之后需要发布</li><li><a href="https://developers.weixin.qq.com/miniprogram/introduction/qrcode.html#%E4%BA%8C%E7%BB%B4%E7%A0%81%E8%B7%B3%E8%BD%AC%E8%A7%84%E5%88%99">配置普通链接二维码规则官方文档</a></li></ul><h3 id="自定义-tabbar"><a href="#自定义-tabbar" class="headerlink" title="自定义 tabbar"></a>自定义 tabbar</h3><p><a href="https://juejin.cn/post/7125985273598443528">uni-app 之 自定义 tabbar</a></p><h2 id="坑点"><a href="#坑点" class="headerlink" title="坑点"></a>坑点</h2><ul><li>启动小程序的时候不要挂 VPN 接口会一直 502</li><li>使用 vue-cli 搭建项目框架,引入依赖的时候,不要使用 npm,使用 yarn</li><li>业务场景需要提前申请小程序的权限,否则会阻塞业务开发<ul><li>微信支付申请企业商户 3-7 天</li><li>微信认证一般 1-2 天</li><li>申请使用定位信息 api, 非必填资料一定要填,否则会被拒绝</li><li>… (尽量多看文档,很多 api 微信团队也一直在修改)</li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>小程序</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>前端实现RBAC菜单按钮权限管理</title>
    <link href="/2023/02/08/%E5%89%8D%E7%AB%AF%E5%AE%9E%E7%8E%B0RBAC%E8%8F%9C%E5%8D%95%E6%8C%89%E9%92%AE%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/"/>
    <url>/2023/02/08/%E5%89%8D%E7%AB%AF%E5%AE%9E%E7%8E%B0RBAC%E8%8F%9C%E5%8D%95%E6%8C%89%E9%92%AE%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/</url>
    
    <content type="html"><![CDATA[<h1 id="前端实现RBAC菜单按钮权限管理"><a href="#前端实现RBAC菜单按钮权限管理" class="headerlink" title="前端实现RBAC菜单按钮权限管理"></a>前端实现RBAC菜单按钮权限管理</h1><h2 id="业务背景"><a href="#业务背景" class="headerlink" title="业务背景"></a>业务背景</h2><blockquote><p>现在后台管理系统一般都会涉及到角色权限的分类,目的是为了使用一套系统多个角色,每个角色分配不同的菜单和按钮权限,进而对不同角色实现权限管理</p></blockquote><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><ul><li>建立数据源<ul><li>项目菜单数据源</li><li>功能按钮数据源</li><li>角色数据源</li><li>人员数据源</li></ul></li><li>把菜单和按钮相应的数据源分配给对应的角色</li><li>创建人员的时候选择对应的角色</li><li>用户登录之后即可获取对应的权限</li></ul><h3 id="技术原理"><a href="#技术原理" class="headerlink" title="技术原理"></a>技术原理</h3><ul><li>动态路由(实现菜单权限管理)</li><li>v-permission指令(权限管理颗粒度达到到按钮的级别)</li></ul><h4 id="动态路由"><a href="#动态路由" class="headerlink" title="动态路由"></a>动态路由</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 页面静态路由(所有权限都一定会有的路由)</span><br><span class="hljs-comment">// 直接挂载</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> constantRoutes = [<br>  &#123;<br>    <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/login&#x27;</span>,<br>    <span class="hljs-attr">component</span>: <span class="hljs-function">() =&gt;</span> <span class="hljs-keyword">import</span>(<span class="hljs-string">&#x27;@/views/login/index&#x27;</span>),<br>    <span class="hljs-attr">hidden</span>: <span class="hljs-literal">true</span><br>  &#125;,<br>  &#123;<br>    <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/404&#x27;</span>,<br>    <span class="hljs-attr">component</span>: <span class="hljs-function">() =&gt;</span> <span class="hljs-keyword">import</span>(<span class="hljs-string">&#x27;@/views/404&#x27;</span>),<br>    <span class="hljs-attr">hidden</span>: <span class="hljs-literal">true</span><br>  &#125;<br>]<br><span class="hljs-comment">// 需要动态加载的路由</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> asyncRoutes = [<br>    ...<br>]<br><br></code></pre></td></tr></table></figure><h5 id="登录之后根据接口返回的数据权限动态添加路由"><a href="#登录之后根据接口返回的数据权限动态添加路由" class="headerlink" title="登录之后根据接口返回的数据权限动态添加路由"></a>登录之后根据接口返回的数据权限动态添加路由</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// accessRoutes  根据接口返回的数据权限拼接过后的路由</span><br>router.<span class="hljs-title function_">addRoutes</span>(accessRoutes) <span class="hljs-comment">// 动态添加</span><br></code></pre></td></tr></table></figure><h3 id="坑点"><a href="#坑点" class="headerlink" title="坑点"></a>坑点</h3><ul><li><p>动态添加的路由是无法在 <strong>options.routes</strong> 中查看的</p><ul><li>所以需要记录自己添加的动态路由,放在 store 中供后面 menu 组件使用</li></ul></li><li><p>需要保证登录之后匹配第一个路由(附解决方案)</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 解决方案</span><br>router.<span class="hljs-title function_">beforeEach</span>(<span class="hljs-title function_">async</span>(to, <span class="hljs-keyword">from</span>, next) =&gt; &#123;<br>  <span class="hljs-title class_">NProgress</span>.<span class="hljs-title function_">start</span>()<br>  <span class="hljs-variable language_">document</span>.<span class="hljs-property">title</span> = <span class="hljs-title function_">getPageTitle</span>(to.<span class="hljs-property">meta</span>.<span class="hljs-property">title</span>)<br>  <span class="hljs-keyword">const</span> hasToken = <span class="hljs-title function_">getAccessToken</span>()<br>  <span class="hljs-keyword">if</span> (hasToken) &#123;<br>    <span class="hljs-keyword">if</span> (to.<span class="hljs-property">path</span> === <span class="hljs-string">&#x27;/login&#x27;</span>) &#123;<br>      <span class="hljs-title function_">next</span>(&#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/&#x27;</span> &#125;)<br>      <span class="hljs-title class_">NProgress</span>.<span class="hljs-title function_">done</span>()<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      <span class="hljs-keyword">const</span> hasRoles = store.<span class="hljs-property">getters</span>.<span class="hljs-property">roles</span> &amp;&amp; store.<span class="hljs-property">getters</span>.<span class="hljs-property">roles</span>.<span class="hljs-property">length</span> &gt; <span class="hljs-number">0</span><br>      <span class="hljs-keyword">if</span> (hasRoles) &#123;<br>        <span class="hljs-title function_">next</span>()<br>      &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">try</span> &#123;<br>          <span class="hljs-keyword">const</span> role = <span class="hljs-keyword">await</span> store.<span class="hljs-title function_">dispatch</span>(<span class="hljs-string">&#x27;user/getInfo&#x27;</span>)<br>          <span class="hljs-keyword">const</span> accessRoutes = <span class="hljs-keyword">await</span> store.<span class="hljs-title function_">dispatch</span>(<span class="hljs-string">&#x27;permission/generateRoutes&#x27;</span>,role)<br>          router.<span class="hljs-title function_">addRoutes</span>(accessRoutes)<br>          <span class="hljs-keyword">let</span> path = <span class="hljs-string">&#x27;/&#x27;</span> <span class="hljs-comment">// 登录后默认跳转路由</span><br>          <span class="hljs-keyword">if</span> (accessRoutes &amp;&amp; accessRoutes[<span class="hljs-number">0</span>].<span class="hljs-property">path</span> !== path) &#123;<br>            <span class="hljs-comment">// 如果默认第一个路由不为默认值,则匹配第一个路由地址</span><br>            <span class="hljs-keyword">if</span> (accessRoutes[<span class="hljs-number">0</span>].<span class="hljs-property">children</span>) &#123;<br>              path = accessRoutes[<span class="hljs-number">0</span>].<span class="hljs-property">path</span> + <span class="hljs-string">&#x27;/&#x27;</span> + accessRoutes[<span class="hljs-number">0</span>].<span class="hljs-property">children</span>[<span class="hljs-number">0</span>].<span class="hljs-property">path</span><br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>              path = accessRoutes[<span class="hljs-number">0</span>].<span class="hljs-property">path</span><br>            &#125;<br>          &#125;<br>        <span class="hljs-comment">//  解决刷新后默认跳转到首页问题</span><br>          <span class="hljs-keyword">if</span> (to.<span class="hljs-property">fullPath</span> === <span class="hljs-string">&#x27;/&#x27;</span>) &#123;<br>            <span class="hljs-title function_">next</span>(&#123; path, <span class="hljs-attr">replace</span>: <span class="hljs-literal">true</span> &#125;)<br>          &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-title function_">next</span>(&#123; ...to, <span class="hljs-attr">replace</span>: <span class="hljs-literal">true</span> &#125;)<br>          &#125;<br>        &#125; <span class="hljs-keyword">catch</span> (error) &#123;<br>          <span class="hljs-keyword">await</span> store.<span class="hljs-title function_">dispatch</span>(<span class="hljs-string">&#x27;user/resetToken&#x27;</span>)<br>          <span class="hljs-title class_">Message</span>.<span class="hljs-title function_">error</span>(error || <span class="hljs-string">&#x27;Has Error&#x27;</span>)<br>          <span class="hljs-title function_">next</span>(<span class="hljs-string">`/login?redirect=<span class="hljs-subst">$&#123;to.path&#125;</span>`</span>)<br>          <span class="hljs-title class_">NProgress</span>.<span class="hljs-title function_">done</span>()<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-keyword">if</span> (whiteList.<span class="hljs-title function_">indexOf</span>(to.<span class="hljs-property">path</span>) !== -<span class="hljs-number">1</span>) &#123;<br>      <span class="hljs-title function_">next</span>()<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      <span class="hljs-title function_">next</span>(<span class="hljs-string">`/login?redirect=<span class="hljs-subst">$&#123;to.path&#125;</span>`</span>)<br>      <span class="hljs-title class_">NProgress</span>.<span class="hljs-title function_">done</span>()<br>    &#125;<br>  &#125;<br>&#125;)<br></code></pre></td></tr></table></figure></li><li><p>重置动态路由</p><p>  vue-router 只提供了 addRouter 方法去添加路由,没有提供删除路由的方法,所以遇到切换角色或者退出登陆后换角色登录,需要重置路由后再次动态添加</p></li><li><p>解决方案</p><ul><li>简单粗暴,退出登录之后直接刷新浏览器( <code>window.location.reload();</code> )</li><li>重置 matcher 还原动态路由<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> <span class="hljs-title class_">Vue</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Router</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue-router&#x27;</span><br><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">createRouter</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Router</span>(&#123;<br>    <span class="hljs-attr">scrollBehavior</span>: <span class="hljs-function">() =&gt;</span> (&#123; <span class="hljs-attr">y</span>: <span class="hljs-number">0</span> &#125;),<br>    <span class="hljs-attr">routes</span>: constantRoutes  <span class="hljs-comment">// 静态路由</span><br>  &#125;)<br>&#125;<br><br><span class="hljs-keyword">const</span> router = <span class="hljs-title function_">createRouter</span>()<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">resetRouter</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-keyword">const</span> newRouter = <span class="hljs-title function_">createRouter</span>()<br>  router.<span class="hljs-property">matcher</span> = newRouter.<span class="hljs-property">matcher</span> <span class="hljs-comment">// 重置路由</span><br>&#125;<br></code></pre></td></tr></table></figure></li></ul></li></ul><h3 id="权限颗粒度达到按钮级别实现"><a href="#权限颗粒度达到按钮级别实现" class="headerlink" title="权限颗粒度达到按钮级别实现"></a>权限颗粒度达到按钮级别实现</h3><p><strong>思路</strong></p><blockquote><p>给每一个按钮唯一标识，获取所有按钮权限进行逐个比对，有这个标识则显示，否则就不显示</p></blockquote><p><strong>示例</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs js">&lt;el-button<br>    v-permission=<span class="hljs-string">&quot;&#x27;base:soft:add&#x27;&quot;</span> <span class="hljs-comment">// 唯一标识为 &#x27;base:soft:add&#x27;</span><br>    type=<span class="hljs-string">&quot;primary&quot;</span><br>    size=<span class="hljs-string">&quot;mini&quot;</span><br>    plain<br>    icon=<span class="hljs-string">&quot;el-icon-plus&quot;</span><br>    @click=<span class="hljs-string">&quot;handleAdd&quot;</span><br>  &gt;<br>    &#123;&#123; $t(<span class="hljs-string">&quot;common.add&quot;</span>) &#125;&#125;<br>&lt;/el-button&gt;<br></code></pre></td></tr></table></figure><ul><li>实现 <strong>v-permission</strong> 指令</li></ul><p>v-permission 的作用就是动态添加或者移除按钮</p><p><strong>目录结构</strong></p><p><code>src └─directives ├─permission │ ├─index.js │ ├─permission.js</code></p><h4 id="permission-js"><a href="#permission-js" class="headerlink" title="permission.js"></a>permission.js</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> store <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@/store&#x27;</span><br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">checkPermission</span>(<span class="hljs-params">el, binding</span>) &#123;<br>  <span class="hljs-keyword">const</span> &#123; value &#125; = binding<br>  <span class="hljs-comment">// btns 为一个对象，利用 hasOwnProperty 判断是按钮是否存在的时间复杂度为 O1，使用数组的效率会低很多</span><br>  <span class="hljs-keyword">const</span> bnts = store.<span class="hljs-property">getters</span> &amp;&amp; store.<span class="hljs-property">getters</span>.<span class="hljs-property">permission_btntKeyList</span><br>  <span class="hljs-keyword">const</span> bntKey = value<br>  <span class="hljs-keyword">const</span> hasPermission = bnts.<span class="hljs-title function_">hasOwnProperty</span>(bntKey) <br>  <span class="hljs-keyword">if</span> (!hasPermission) &#123;<br>    el.<span class="hljs-property">parentNode</span> &amp;&amp; el.<span class="hljs-property">parentNode</span>.<span class="hljs-title function_">removeChild</span>(el)<br>  &#125;<br>&#125;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;<br>  <span class="hljs-title function_">inserted</span>(<span class="hljs-params">el, binding</span>) &#123;<br>    <span class="hljs-title function_">checkPermission</span>(el, binding)<br>  &#125;,<br>  <span class="hljs-title function_">update</span>(<span class="hljs-params">el, binding</span>) &#123;<br>    <span class="hljs-title function_">checkPermission</span>(el, binding)<br>  &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="index-js"><a href="#index-js" class="headerlink" title="index.js"></a>index.js</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> permission <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./permission&#x27;</span><br><br><span class="hljs-keyword">const</span> install = <span class="hljs-keyword">function</span>(<span class="hljs-params">Vue</span>) &#123;<br>  <span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">directive</span>(<span class="hljs-string">&#x27;permission&#x27;</span>, permission)<br>&#125;<br><br><span class="hljs-keyword">if</span> (<span class="hljs-variable language_">window</span>.<span class="hljs-property">Vue</span>) &#123;<br>  <span class="hljs-variable language_">window</span>[<span class="hljs-string">&#x27;permission&#x27;</span>] = permission<br>  <span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">use</span>(install); <span class="hljs-comment">// eslint-disable-line</span><br>&#125;<br><br>permission.<span class="hljs-property">install</span> = install<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> permission<br><br></code></pre></td></tr></table></figure><h4 id="main-js-中全局挂载"><a href="#main-js-中全局挂载" class="headerlink" title="main.js 中全局挂载"></a>main.js 中全局挂载</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> permission <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@/directives/permission&#x27;</span><br><span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">use</span>(permission)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>工程化</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>前端国际化你还在一个个翻译?复制粘贴,让你坐着喝茶</title>
    <link href="/2022/12/30/%E5%89%8D%E7%AB%AF%E5%9B%BD%E9%99%85%E5%8C%96%E4%BD%A0%E8%BF%98%E5%9C%A8%E4%B8%80%E4%B8%AA%E4%B8%AA%E7%BF%BB%E8%AF%91-%E5%A4%8D%E5%88%B6%E7%B2%98%E8%B4%B4-%E8%AE%A9%E4%BD%A0%E5%9D%90%E7%9D%80%E5%96%9D%E8%8C%B6/"/>
    <url>/2022/12/30/%E5%89%8D%E7%AB%AF%E5%9B%BD%E9%99%85%E5%8C%96%E4%BD%A0%E8%BF%98%E5%9C%A8%E4%B8%80%E4%B8%AA%E4%B8%AA%E7%BF%BB%E8%AF%91-%E5%A4%8D%E5%88%B6%E7%B2%98%E8%B4%B4-%E8%AE%A9%E4%BD%A0%E5%9D%90%E7%9D%80%E5%96%9D%E8%8C%B6/</url>
    
    <content type="html"><![CDATA[<h1 id="前端国际化你还在一个个翻译-复制粘贴-让你坐着喝茶"><a href="#前端国际化你还在一个个翻译-复制粘贴-让你坐着喝茶" class="headerlink" title="前端国际化你还在一个个翻译?复制粘贴,让你坐着喝茶"></a>前端国际化你还在一个个翻译?复制粘贴,让你坐着喝茶</h1><h2 id="先上体验地址"><a href="#先上体验地址" class="headerlink" title="先上体验地址"></a>先上体验地址</h2><p><a href="https://david-xia001.github.io/Json-Internation/">JSON国际化小工具</a></p><hr><p>不能翻译的情况可能是免费翻译字符数用完了,可以自己注册之后换上自己的 appid 和 key 就行了</p><p><a href="https://github.com/David-XIa001/Json-Internation">源码地址</a></p><h2 id="需求及背景"><a href="#需求及背景" class="headerlink" title="需求及背景"></a>需求及背景</h2><blockquote><p>项目迭代了好几年,之前一直没有做国际化,今天产品突然告诉我项目要做国际化,而且时间很紧,我一口老血喷出来了<br>这么多业务文件,得一个个去做 i18n 映射,还得自己翻译字段,还得支持好几种语言<br>真要这样干下去,我真的人没了<br>为此我做了个国际化翻译的小工具,让我在翻译阶段节约了 99% 的时间</p></blockquote><h2 id="痛苦"><a href="#痛苦" class="headerlink" title="痛苦"></a>痛苦</h2><ul><li>页面已经做了 i18n 映射,但是只有中文词条</li><li>英文和其他语言词条需要我<strong>一条一条</strong>用百度翻译去翻译,还得选择不同语言</li><li>然后拿到结果去英文,日文,法文等文件中粘贴</li><li>一条两条还好,几百上千条,怕是我<strong>cv</strong>键都得按报废</li></ul><h2 id="批处理"><a href="#批处理" class="headerlink" title="批处理"></a>批处理</h2><blockquote><p>经过几十次的手动 cv 后,我发现这个步骤都是固定,我做的就是重复劳动<br>既然是重复劳动,那能不能做批处理,使用程序去处理这件枯燥无味的事情呢?<br>那就行动吧!</p></blockquote><h3 id="程序思维"><a href="#程序思维" class="headerlink" title="程序思维"></a>程序思维</h3><h4 id="把大象装进冰箱里需要几个步骤"><a href="#把大象装进冰箱里需要几个步骤" class="headerlink" title="把大象装进冰箱里需要几个步骤"></a>把大象装进冰箱里需要几个步骤</h4><ul><li>打开冰箱</li><li>把大象放进冰箱里</li><li>关上冰箱门</li><li>完事,至于其中的细节,只需要分而治之就行</li></ul><h4 id="同理-把词条翻译成对应语言也只需要几个步骤"><a href="#同理-把词条翻译成对应语言也只需要几个步骤" class="headerlink" title="同理,把词条翻译成对应语言也只需要几个步骤"></a>同理,把词条翻译成对应语言也只需要几个步骤</h4><ul><li>拿到词条</li><li>选择要翻译的语言</li><li>进行翻译</li><li>拿到结果,完事</li></ul><p>知道思路我们就开始行动吧!</p><h3 id="拿到词条"><a href="#拿到词条" class="headerlink" title="拿到词条"></a>拿到词条</h3><h4 id="先看词条长啥样子"><a href="#先看词条长啥样子" class="headerlink" title="先看词条长啥样子"></a>先看词条长啥样子</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs js">&#123;<br><br>     <span class="hljs-string">&quot;device&quot;</span>: &#123;<br><br>     <span class="hljs-string">&quot;device&quot;</span>: <span class="hljs-string">&quot;激活设备&quot;</span>,<br><br>     <span class="hljs-string">&quot;confirm&quot;</span>: <span class="hljs-string">&quot;密码确认&quot;</span>,<br><br>     <span class="hljs-string">&quot;active&quot;</span>:<span class="hljs-string">&quot;激活&quot;</span> &#125;<br><br>&#125;<br><br></code></pre></td></tr></table></figure><ul><li>词条是一个 JSON 格式的对象,但是我们并不能直接处理它</li><li>需要一条一条的取出来,但是它又有层级嵌套</li><li>所以第一步得先拍平</li><li>然后就可以遍历拍平后的对象,拿到每一条词条</li></ul><h3 id="选择要翻译的语言"><a href="#选择要翻译的语言" class="headerlink" title="选择要翻译的语言"></a>选择要翻译的语言</h3><h4 id="使用百度翻译工具"><a href="#使用百度翻译工具" class="headerlink" title="使用百度翻译工具"></a>使用百度翻译工具</h4><ul><li>百度翻译开发者平台,注册之后可以使用百度翻译的api</li><li><a href="https://api.fanyi.baidu.com/product/11">注册地址</a></li><li>百度翻译基本支持全球主要国家语言</li><li>调 api 的时候提供对应参数即可</li><li>翻译的事情交给百度翻译</li></ul><h3 id="结果处理"><a href="#结果处理" class="headerlink" title="结果处理"></a>结果处理</h3><ul><li>拿到了翻译结果,但是数据格式并不是我们期望的</li><li>进行格式转换</li><li>还原拍平前的数据格式,只改变值,不改变 key</li><li>就拿到我们想要的结果啦</li><li>当然还是需要检查一下结果的,百度翻译其实只是一个粗翻</li></ul><h3 id="难点"><a href="#难点" class="headerlink" title="难点"></a>难点</h3><ul><li>数据格式的支持与校验<ul><li>我们把本地对象放到页面上的组件时,其实格式发生了变化</li><li>从一个 json 对象变成了 string</li><li>但是我们最终需要的还是一个 json 所以需要使用 JSON 来进行转化</li><li>对于 obj 对象,可以使用 eval 执行后获取</li></ul></li><li>分片与合并<ul><li>受限于百度翻译平台单次只能翻译 2000 以内字符</li><li>所以在超出后需要进行分片</li><li>得到结果后再进行合并</li></ul></li></ul><h3 id="成果"><a href="#成果" class="headerlink" title="成果"></a>成果</h3><ul><li>支持json类型 [√]</li><li>支持对象类型 [√]</li><li>支持分片处理(不受限于2000字以内的翻译,目前分片是1000字符分割一次) [√]</li><li>文件上传及下载 [×]</li><li>多语言选择 [√]</li></ul><h2 id="想法"><a href="#想法" class="headerlink" title="想法"></a>想法</h2><ul><li>其实真正耗时的地方在于 i18n 的映射</li><li>这一块我个人是手动处理的,需要耗费大量的时间和精力</li><li>这一块其实也能做很多事情</li><li>类似于 babel 得到 AST 之后,将所有符合规则的 value 拿出来进行映射</li><li>key就直接取首字母,重复的后面就加数字</li><li>然后再直接调用api,真的解放这种国际化方案的生产力</li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>前端使用OAuth2.0的实现refreshToken无痛刷新</title>
    <link href="/2022/12/29/%E5%89%8D%E7%AB%AF%E4%BD%BF%E7%94%A8OAuth2-0%E7%9A%84%E5%AE%9E%E7%8E%B0refreshToken%E6%97%A0%E7%97%9B%E5%88%B7%E6%96%B0/"/>
    <url>/2022/12/29/%E5%89%8D%E7%AB%AF%E4%BD%BF%E7%94%A8OAuth2-0%E7%9A%84%E5%AE%9E%E7%8E%B0refreshToken%E6%97%A0%E7%97%9B%E5%88%B7%E6%96%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="前端使用OAuth2-0的实现refreshToken无痛刷新"><a href="#前端使用OAuth2-0的实现refreshToken无痛刷新" class="headerlink" title="前端使用OAuth2.0的实现refreshToken无痛刷新"></a>前端使用OAuth2.0的实现refreshToken无痛刷新</h1><h2 id="业务背景"><a href="#业务背景" class="headerlink" title="业务背景"></a>业务背景</h2><blockquote><p>现在项目中登录鉴权一般使用的是 OAuth 2.0, 登录完成后会返回两个token,分别是 <strong>accessToken</strong> 和 <strong>refreshToken</strong><br><strong>accessToken</strong> 我们在调接口的时候会带给服务端,作为用户凭证在, <strong>refreshToken</strong> 是用来刷新用户凭证的一个参数<br>目的是避免用户经常因为还在操作页面的时候 <strong>accessToken</strong> 过期,需要重新登录的较差体验</p></blockquote><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><ul><li>登录完成后会返回两个token,分别是 <strong>accessToken</strong> 和 <strong>refreshToken</strong> 以及一个 <strong>expiresTime</strong> 过期时间</li><li><strong>accessToken</strong> 作为用户凭,证调接口的时候会带给服务端</li><li>前端会在拦截器中判断 当前时间是否超过了 <strong>expiresTime</strong> 过期时间<ul><li>超过了,就会调用刷新 <strong>token</strong> 的接口, <strong>refreshToken</strong> 将作为请求参数带到服务端,接口会返回新的 <strong>accessToken</strong> 和 <strong>refreshToken</strong> 和 <strong>expiresTime</strong>,后面的请求将使用新的 <strong>accessToken</strong> 作为用户凭证带给服务端</li><li>未超过,直接使用 <strong>accessToken</strong> 作为用户凭证</li></ul></li><li>只要用户在一直操作,那么就算他的 <strong>accessToken</strong> 过期也不需要重新登录</li><li>直到超过了 <strong>refreshToken</strong> 的过期时间(一般这个时间会比 <strong>accessToken</strong> 过期时间长很多,说明用户在这段时间内都没有进行操作),才会真正的过期</li></ul><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><blockquote><p>项目将使用axios的库进行请求的发送和拦截</p></blockquote><h3 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h3><p><code>src └─libs ├─axios │ ├─config.js │ ├─index.js │ ├─instance.js</code></p><h3 id="config-js"><a href="#config-js" class="headerlink" title="config.js"></a>config.js</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * axios的公共配置</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">const</span> config = &#123;<br>  <span class="hljs-attr">baseURL</span>: process.<span class="hljs-property">env</span>.<span class="hljs-property">VUE_APP_BASE_API</span>, <span class="hljs-comment">// base_api</span><br>  <span class="hljs-comment">// 公共请求头</span><br>  <span class="hljs-attr">headers</span>: &#123;<br>    <span class="hljs-string">&#x27;Content-Type&#x27;</span>: <span class="hljs-string">&#x27;application/json; charset=UTF-8&#x27;</span>,<br>  &#125;,<br>  <span class="hljs-attr">timeout</span>: <span class="hljs-number">5000</span>, <span class="hljs-comment">// 超时时间</span><br>  <span class="hljs-comment">// 默认的响应方式</span><br>  <span class="hljs-attr">responseType</span>: <span class="hljs-string">&#x27;json&#x27;</span><br>&#125;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> config<br><br></code></pre></td></tr></table></figure><h3 id="instance-js"><a href="#instance-js" class="headerlink" title="instance.js"></a>instance.js</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> axios <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;axios&#x27;</span><br><span class="hljs-keyword">import</span> config <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./config&#x27;</span><br><span class="hljs-keyword">import</span> &#123; <span class="hljs-title class_">Message</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;element-ui&#x27;</span><br><span class="hljs-keyword">import</span> &#123;<br>  getAccessToken,<br>  removeAccessToken,<br>  removeRefreshToken,<br>  removeExpiresTime<br>&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@/utils/auth&#x27;</span> <span class="hljs-comment">//这里的函数主要是使用 localStorage 进行数据持久化</span><br><span class="hljs-keyword">import</span> router <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@/router&#x27;</span><br><span class="hljs-keyword">import</span> i18n <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@/lang&#x27;</span>  <span class="hljs-comment">// 国际化</span><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 创建一个独立的axios实例</span><br><span class="hljs-comment"> * 把常用的公共请求配置放这里添加</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">const</span> instance = axios.<span class="hljs-title function_">create</span>(config)<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 请求拦截</span><br><span class="hljs-comment"> * 添加一些全局要带上的东西</span><br><span class="hljs-comment"> */</span><br>instance.<span class="hljs-property">interceptors</span>.<span class="hljs-property">request</span>.<span class="hljs-title function_">use</span>(<br>  <span class="hljs-comment">// 正常拦截</span><br>  <span class="hljs-function">(<span class="hljs-params">config</span>) =&gt;</span> &#123;<br>    <span class="hljs-comment">// 添加token</span><br>    <span class="hljs-keyword">const</span> <span class="hljs-variable constant_">LOCAL_TOKEN</span> = <span class="hljs-title function_">getAccessToken</span>()<br>    <span class="hljs-keyword">if</span> (<span class="hljs-variable constant_">LOCAL_TOKEN</span>) &#123;<br>      config.<span class="hljs-property">headers</span>[<span class="hljs-string">&#x27;Authorization&#x27;</span>] = <span class="hljs-variable constant_">LOCAL_TOKEN</span><br>    &#125;<br>    <span class="hljs-comment">// 返回处理后的配置</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-title class_">Promise</span>.<span class="hljs-title function_">resolve</span>(config)<br>  &#125;,<br><br>  <span class="hljs-comment">// 拦截失败</span><br>  <span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> <span class="hljs-title class_">Promise</span>.<span class="hljs-title function_">reject</span>(err)<br>)<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 返回拦截</span><br><span class="hljs-comment"> * 在这里解决数据返回的异常问题</span><br><span class="hljs-comment"> */</span><br>instance.<span class="hljs-property">interceptors</span>.<span class="hljs-property">response</span>.<span class="hljs-title function_">use</span>(<br>  <span class="hljs-comment">// 正常响应</span><br>  <span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">if</span> (res.<span class="hljs-property">status</span> === <span class="hljs-number">200</span>) &#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-title class_">Promise</span>.<span class="hljs-title function_">resolve</span>(res.<span class="hljs-property">data</span>)<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-title class_">Promise</span>.<span class="hljs-title function_">reject</span>(res)<br>    &#125;<br>  &#125;,<br>  <span class="hljs-comment">// 异常响应（统一返回一个msg提示）</span><br>  <span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">if</span> (err.<span class="hljs-property">response</span> &amp;&amp; err.<span class="hljs-property">response</span>.<span class="hljs-property">status</span>) &#123;<br>      <span class="hljs-keyword">switch</span> (err.<span class="hljs-property">response</span>.<span class="hljs-property">status</span>) &#123;<br>        <span class="hljs-comment">// ...</span><br>        <span class="hljs-keyword">case</span> <span class="hljs-number">500</span>:<br>          <span class="hljs-title class_">Message</span>(&#123;<br>            <span class="hljs-attr">message</span>: i18n.<span class="hljs-title function_">t</span>(<span class="hljs-string">`error.<span class="hljs-subst">$&#123;err.response.data.code&#125;</span>`</span>),<br>            <span class="hljs-attr">duration</span>: <span class="hljs-number">1500</span>,<br>            <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;error&#x27;</span><br>          &#125;)<br>          <span class="hljs-keyword">if</span> (err.<span class="hljs-property">response</span>.<span class="hljs-property">data</span>.<span class="hljs-property">code</span> === <span class="hljs-string">&#x27;TOKEN_INVALID&#x27;</span>) &#123; <span class="hljs-comment">//token 失效后的操作</span><br>            <span class="hljs-title function_">removeAccessToken</span>()<br>            <span class="hljs-title function_">removeExpiresTime</span>()<br>            <span class="hljs-title function_">removeRefreshToken</span>()<br>            router.<span class="hljs-title function_">replace</span>(&#123;<br>              <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/login&#x27;</span><br>            &#125;)<br>          &#125;<br>          <span class="hljs-keyword">break</span><br>        <span class="hljs-attr">default</span>:<br>          <span class="hljs-keyword">return</span><br>      &#125;<br>      <span class="hljs-keyword">return</span> <span class="hljs-title class_">Promise</span>.<span class="hljs-title function_">reject</span>(err.<span class="hljs-property">response</span>)<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-title class_">Message</span>(&#123;<br>          <span class="hljs-attr">message</span>: <span class="hljs-string">&#x27;服务器异常&#x27;</span>,<br>          <span class="hljs-attr">duration</span>: <span class="hljs-number">1500</span>,<br>          <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;error&#x27;</span><br>        &#125;)<br>      &#125; <span class="hljs-keyword">catch</span> (e) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(e)<br>      &#125;<br>    &#125;<br>  &#125;<br>)<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> instance<br><br></code></pre></td></tr></table></figure><h3 id="index-js"><a href="#index-js" class="headerlink" title="index.js"></a>index.js</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> axios <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./instance&#x27;</span><br><span class="hljs-keyword">import</span> &#123;<br>  getAccessToken,<br>  getExpiresTime,<br>  setAccessToken,<br>  getRefreshToken,<br>  setRefreshToken,<br>  setExpiresTime<br>&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@/utils/auth&#x27;</span> <span class="hljs-comment">//这里的函数主要是使用 localStorage 进行数据持久化</span><br><span class="hljs-keyword">import</span> &#123; refresh &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@/api/user&#x27;</span> <span class="hljs-comment">// refresh 的api</span><br><br><span class="hljs-comment">// 防止重复刷新的状态开关</span><br><span class="hljs-keyword">let</span> isRefreshing = <span class="hljs-literal">false</span><br><span class="hljs-comment">// 被拦截的请求列表</span><br><span class="hljs-keyword">let</span> requests = []<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 请求拦截</span><br><span class="hljs-comment"> * 在这里要判断是否需要刷新token</span><br><span class="hljs-comment"> * 帮助用户自动延长登录有效期</span><br><span class="hljs-comment"> */</span><br>axios.<span class="hljs-property">interceptors</span>.<span class="hljs-property">request</span>.<span class="hljs-title function_">use</span>(<span class="hljs-function">(<span class="hljs-params">config</span>) =&gt;</span> &#123;<br>  <span class="hljs-comment">/**</span><br><span class="hljs-comment">   * 刷新token</span><br><span class="hljs-comment">   */</span><br>  <span class="hljs-comment">// 计算token的剩余有效时间</span><br>  <span class="hljs-keyword">const</span> <span class="hljs-variable constant_">OLD_TOKEN_EXP</span> = <span class="hljs-title function_">getExpiresTime</span>() || <span class="hljs-number">0</span><br>  <span class="hljs-keyword">const</span> <span class="hljs-variable constant_">NOW_TIMESTAMP</span> = <span class="hljs-title class_">Date</span>.<span class="hljs-title function_">now</span>()<br>  <span class="hljs-keyword">const</span> <span class="hljs-variable constant_">TIME_DIFF</span> = <span class="hljs-variable constant_">OLD_TOKEN_EXP</span> - <span class="hljs-variable constant_">NOW_TIMESTAMP</span><br>  <span class="hljs-comment">// 判断本地是否有记录</span><br>  <span class="hljs-keyword">const</span> <span class="hljs-variable constant_">HAS_LOCAL_TOKEN</span> = !!<span class="hljs-title function_">getAccessToken</span>()<br>  <span class="hljs-keyword">const</span> <span class="hljs-variable constant_">HAS_LOCAL_TOKEN_EXP</span> = !!<span class="hljs-variable constant_">OLD_TOKEN_EXP</span><br>  <span class="hljs-comment">// 获取接口url</span><br>  <span class="hljs-keyword">const</span> <span class="hljs-variable constant_">API_URL</span> = config.<span class="hljs-property">url</span>.<span class="hljs-title function_">split</span>(<span class="hljs-string">&#x27;?&#x27;</span>)[<span class="hljs-number">0</span>] || <span class="hljs-string">&#x27;&#x27;</span><br>  <span class="hljs-comment">// 非刷新请求、有本地记录、已过期，同时满足，才会进入刷新流程</span><br>  <span class="hljs-keyword">if</span> (<br>    <span class="hljs-variable constant_">API_URL</span> !== <span class="hljs-string">&#x27;/admin-users/refreshToken&#x27;</span> &amp;&amp; <span class="hljs-comment">// 这个地方判断接口是否是刷新接口, api 地址需要一致</span><br>    <span class="hljs-variable constant_">HAS_LOCAL_TOKEN</span> &amp;&amp;<br>    <span class="hljs-variable constant_">HAS_LOCAL_TOKEN_EXP</span> &amp;&amp;<br>    <span class="hljs-variable constant_">TIME_DIFF</span> &lt;= <span class="hljs-number">2000</span> <span class="hljs-comment">// 这里的 2000 ms 是防止发送请求的时候没过期,但是接口到达服务器的时候过期了,根据实际情况进行调整</span><br>  ) &#123;<br>    <span class="hljs-comment">// 如果没有在刷新，则执行刷新</span><br>    <span class="hljs-keyword">if</span> (!isRefreshing) &#123;<br>      <span class="hljs-comment">// 打开状态</span><br>      isRefreshing = <span class="hljs-literal">true</span><br>      <span class="hljs-comment">// 获取新的token</span><br>      <span class="hljs-keyword">const</span> <span class="hljs-variable constant_">REFRESH_TOKEN</span> = <span class="hljs-title function_">getRefreshToken</span>() || <span class="hljs-string">&#x27;&#x27;</span><br>      <span class="hljs-comment">// 请求刷新</span><br>      <span class="hljs-title function_">refresh</span>(<span class="hljs-variable constant_">REFRESH_TOKEN</span>)<br>        .<span class="hljs-title function_">then</span>(<span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;<br>          <span class="hljs-comment">// 存储token信息</span><br>          <span class="hljs-keyword">const</span> data = res.<span class="hljs-property">data</span><br>          <span class="hljs-title function_">setAccessToken</span>(data.<span class="hljs-property">accessToken</span>)<br>          <span class="hljs-title function_">setRefreshToken</span>(data.<span class="hljs-property">refreshToken</span>)<br>          <span class="hljs-title function_">setExpiresTime</span>(data.<span class="hljs-property">expiresTime</span>)<br>          <span class="hljs-comment">// 如果新的token存在，用新token继续之前的请求，然后重置队列</span><br>          <span class="hljs-keyword">if</span> (data.<span class="hljs-property">accessToken</span>) &#123;<br>            config.<span class="hljs-property">headers</span>[<span class="hljs-string">&#x27;Authorization&#x27;</span>] = data.<span class="hljs-property">accessToken</span><br>            requests.<span class="hljs-title function_">forEach</span>(<span class="hljs-function">(<span class="hljs-params">cb</span>) =&gt;</span> <span class="hljs-title function_">cb</span>(config))<br>            requests = []<br>          &#125;<br>          <span class="hljs-comment">// 关闭状态，允许下次继续刷新</span><br>          isRefreshing = <span class="hljs-literal">false</span><br>        &#125;)<br>        .<span class="hljs-title function_">catch</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>          isRefreshing = <span class="hljs-literal">false</span><br>          requests = []<br>        &#125;)<br>    &#125;<br>    <span class="hljs-comment">// 并把刷新完成之前的请求都存储为请求队列</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve</span>) =&gt;</span> &#123;<br>      requests.<span class="hljs-title function_">push</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>        <span class="hljs-title function_">resolve</span>(config)<br>      &#125;)<br>    &#125;)<br>  &#125;<br>  <span class="hljs-keyword">return</span> <span class="hljs-title class_">Promise</span>.<span class="hljs-title function_">resolve</span>(config)<br>&#125;)<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> axios<br><br></code></pre></td></tr></table></figure><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://chengpeiquan.com/article/refresh-token.html">基于OAuth2.0的refreshToken前端刷新方案与演示demo</a></p>]]></content>
    
    
    <categories>
      
      <category>工程化</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>gitLab使用镜像同步,迁移远程仓库</title>
    <link href="/2022/12/12/gitLab%E8%BF%81%E7%A7%BB%E8%BF%9C%E7%A8%8B%E4%BB%93/"/>
    <url>/2022/12/12/gitLab%E8%BF%81%E7%A7%BB%E8%BF%9C%E7%A8%8B%E4%BB%93/</url>
    
    <content type="html"><![CDATA[<h1 id="gitLab使用镜像同步-迁移远程仓库"><a href="#gitLab使用镜像同步-迁移远程仓库" class="headerlink" title="gitLab使用镜像同步,迁移远程仓库"></a>gitLab使用镜像同步,迁移远程仓库</h1><h3 id="需求"><a href="#需求" class="headerlink" title="需求:"></a>需求:</h3><p>旧的远程仓库不再使用了,需要把旧的远程仓库代码迁移到新的远程仓库上</p><h3 id="操作"><a href="#操作" class="headerlink" title="操作:"></a>操作:</h3><ol><li>使用常规手段,用旧的本地仓库更换远程仓库地址,然后推送到新的远程仓库中</li><li>使用gitlab自带的Mirroring repositories镜像同步的方法去将旧的仓库同步到新的远程仓库上</li></ol><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤:"></a>步骤:</h3><ol><li><p>打开新的远程仓库的gitlab页面,找到setting下的repository下的</p><img src="/2022/12/12/gitLab%E8%BF%81%E7%A7%BB%E8%BF%9C%E7%A8%8B%E4%BB%93/1.png" class=""></li><li><p>展开后的页面需要填写这两个表单</p><img src="/2022/12/12/gitLab%E8%BF%81%E7%A7%BB%E8%BF%9C%E7%A8%8B%E4%BB%93/2.png" class=""></li><li><p>需要注意的是,旧的远程仓库的地址需要加上你旧的远程仓库的用户名</p><ol><li>远程仓库地址<a href="http://xxx.git/">http://xxx.git</a> 用户名为:david</li><li>那么要填的URL为: <a href="http://david@xxx.git/">http://david@xxx.git</a></li></ol></li><li><p>输入完毕后,点击这个按钮进行同步</p><img src="/2022/12/12/gitLab%E8%BF%81%E7%A7%BB%E8%BF%9C%E7%A8%8B%E4%BB%93/3.png" class=""></li><li><p>会出现这两个提示,告诉你正在同步</p><img src="/2022/12/12/gitLab%E8%BF%81%E7%A7%BB%E8%BF%9C%E7%A8%8B%E4%BB%93/4.png" class=""></li><li><p>这个时候等待即可,或者点下面那个刷新按钮,,直到告诉你已经同步成功了!</p><img src="/2022/12/12/gitLab%E8%BF%81%E7%A7%BB%E8%BF%9C%E7%A8%8B%E4%BB%93/5.png" class=""></li><li><p>然后点击删除按钮,删除掉这个同步,不然会一直同步的,这个时候就ok啦</p></li><li><p>这样同步过来的可能会有一个问题,就是之前设置的保护分支或者默认分支就需要重新设置一下</p></li></ol>]]></content>
    
    
    <categories>
      
      <category>工程化</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
